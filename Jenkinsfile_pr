node {

  checkout(
           changelog: true,
           poll: true,
           scm: [$class: 'GitSCM',
            branches: [
              [
                name: "origin/${env.gitlabSourceBranch}"]],
                doGenerateSubmoduleConfigurations: false,
                extensions: [
                  [$class: 'PreBuildMerge',
                    options: [
                      fastForwardMode: 'FF',
                      mergeRemote: 'origin',
                      mergeStrategy: 'default',
                      mergeTarget: "${env.gitlabTargetBranch}"
                    ]
                  ]
                ],
              submoduleCfg: [],
              userRemoteConfigs:
                [ [name: 'origin', url: 'git@git.demo.lan:puppet/control-repo.git']]
            ]
  )

  stage('Lint Control Repo'){
    withEnv(['PATH+EXTRA=/usr/local/bin']) {
      ansiColor('xterm') {
        sh(script: '''
          source ~/.bash_profile
          rbenv global 2.3.1
          eval "$(rbenv init -)"
          bundle install
          bundle exec rake lint
        ''')
      }
    }
  }

  stage('Syntax Check Control Repo'){
    withEnv(['PATH+EXTRA=/usr/local/bin']) {
      ansiColor('xterm') {
        sh(script: '''
          source ~/.bash_profile
          rbenv global 2.3.1
          eval "$(rbenv init -)"
          bundle install
          bundle exec rake syntax --verbose
        ''')
      }
    }
  }

  stage('Validate Puppetfile in Control Repo'){
    withEnv(['PATH+EXTRA=/usr/local/bin']) {
      ansiColor('xterm') {
        sh(script: '''
          source ~/.bash_profile
          rbenv global 2.3.1
          eval "$(rbenv init -)"
          bundle install
          bundle exec rake r10k:syntax
        ''')
      }
    }
  }
}
