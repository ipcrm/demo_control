.job_pre_req: &job_prereq
  before_script:
    - sh -x scripts/ci_puppet_access.sh
    - source ~/.bash_profile
    - rbenv shell 2.3.1
    - bundle install

.deploy_pre_req: &deploy_pre_req
  before_script:
    - sh -x scripts/ci_puppet_access.sh

stages:
  - test
  - deploy
  - release_nonprod
  - release_prod

lint:
  <<: *job_prereq
  stage: test
  script:
    - bundle exec rake lint

syntax:
  <<: *job_prereq
  stage: test
  script:
    - bundle exec rake syntax -v

r10ksyntax:
  <<: *job_prereq
  stage: test
  script:
    - bundle exec rake r10k:syntax

deploy_feature:
  <<: *deploy_pre_req
  stage: deploy
  script:
    - echo "Deploying Feature Branch - ${CI_BUILD_REF_NAME}"
    - /opt/puppetlabs/bin/puppet-code deploy -w $CI_BUILD_REF_NAME
  environment:
    name: testing/$CI_BUILD_REF_NAME
    url: http://git.demo.lan/puppet/control-repo/tree/$CI_BUILD_REF_NAME
  only:
    - branches
  except:
    - production

deploy_stable:
  <<: *deploy_pre_req
  stage: deploy
  script:
    - echo "Deploying Stable Env - ${CI_BUILD_REF_NAME}"
    - /opt/puppetlabs/bin/puppet-code deploy -w $CI_BUILD_REF_NAME
  environment:
    name: $CI_BUILD_REF_NAME
    url: http://git.demo.lan/puppet/control-repo/tree/$CI_BUILD_REF_NAME
  only:
    - production

release_canary:
  <<: *deploy_pre_req
  stage: release_nonprod
  script:
    - /opt/puppetlabs/bin/puppet-job run --query 'nodes { facts { name = "canary" and value = true }}'
  when: manual
  only:
    - production

release_production:
  <<: *deploy_pre_req
  stage: release_prod
  script:
    - /opt/puppetlabs/bin/puppet-job run --query 'nodes{}[]}' --concurrency 10
  when: manual
  only:
    - production
